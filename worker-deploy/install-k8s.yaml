---
- hosts: "workers"
  remote_user: coinop
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
     - name: Add hosts to /etc/hosts
       lineinfile:
         path: /etc/hosts
         line: "{{ hostvars[item]['ansible_host'] }} {{ item }}"
       loop: "{{ groups['masters'] + groups['workers'] }}"
       become: yes

     - name: Change hostname of target hosts
       hostname:
         name: "{{ hostvars[inventory_hostname]['hostname'] }}"
  
     - name: disable swap
       shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

     - name: Create containerd config file
       file:
         path: "/etc/modules-load.d/containerd.conf"
         state: "touch"

     - name: Add conf for containerd
       blockinfile:
         path: "/etc/modules-load.d/containerd.conf"
         block: |
               overlay
               br_netfilter
              
     - name: modprobe
       shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter

     - name: Create kubernetes config file
       file:
         path: "/etc/sysctl.d/kubernetes.conf"
         state: "touch"

     - name: Add conf for containerd
       blockinfile:
         path: "/etc/sysctl.d/kubernetes.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1

     - name: Apply new settings
       command: sudo sysctl --system

     - name: Install update
       command: sudo apt update

     - name: install containerd
       shell: |
               sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates --allow-change-held-packages

     - name: Install update containerd
       command: sudo apt install -y containerd --allow-change-held-packages

     - name: add containerd configuration
       shell: |
               sudo mkdir -p /etc/containerd
               sudo containerd config default | sudo tee /etc/containerd/config.toml
               sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

     - name: Restart containerd
       command: sudo systemctl restart containerd

     - name: Restart containerd
       command: sudo systemctl enable containerd

     - name: add containerd configuration
       shell: |
               curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
               echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

     - name: Install update for install kubectl kubeadm and kubelet
       command: sudo apt update

     - name: install and configure dependencies
       shell: |
               sudo apt-get update && sudo apt-get install -y apt-transport-https curl
               curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

     - name: Create kubernetes repo file
       file:
         path: "/etc/apt/sources.list.d/kubernetes.list"
         state: "touch"

     - name: Add K8s Source
       blockinfile:
         path: "/etc/apt/sources.list.d/kubernetes.list"
         block: |
               deb https://apt.kubernetes.io/ kubernetes-xenial main

     - name: deploy kubelet kubeadm kubectl configuration
       shell: |
               sudo apt-get install -y kubelet kubeadm kubectl --allow-change-held-packages
               sudo apt-mark hold kubelet kubeadm kubectl


